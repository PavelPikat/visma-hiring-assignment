parameters:
  - name: allowDestructivePlan
    displayName: Allow Terraform destroy resources?
    type: boolean
    default: false

name: 0.0.1$(Rev:.r)_$(SourceBranchName)
trigger:
  batch: true
  branches:
    include:
      - master


variables:
  TF_IN_AUTOMATION: true
  TF_INPUT: 0
stages:
  - stage: Infrastructure
    pool:
      vmImage: 'windows-latest'
    jobs:
      - deployment: Infrastructure
        environment: 'sre-assignment-infrastructure'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/infrastructure.yml
                  parameters:
                    environmentName: 'sre-assignment-infrastructure'
                    allowDestructivePlan: '${{ parameters.allowDestructivePlan }}'
  - stage: Build
    dependsOn: Infrastructure
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: BuildDummyPdf
        steps:
          - template: templates/build.yml
            parameters:
              dockerFile: '$(Build.SourcesDirectory)/sre/dummy-pdf-or-png/Dockerfile'
              repository: 'dummy-pdf-or-png'
      - job: BuildAssignmentService
        steps:
          - template: templates/build.yml
            parameters:
              dockerFile: '$(Build.SourcesDirectory)/sre/dummy-pdf-or-png/Dockerfile'
              repository: 'assignment-service'
                
  - stage: Deploy
    dependsOn: Build
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - deployment: AKS
        environment: 'sre-assignment-aks'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/deploy.yml
                  parameters:
                    manifest: '$(Build.SourcesDirectory)/sre/.k8/aks-all-in-one.yaml'
        

                  
        
